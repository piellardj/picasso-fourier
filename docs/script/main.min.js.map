{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/main.ts","webpack:///./src/ts/line-drawing.ts","webpack:///./src/ts/fourier-series.ts","webpack:///./src/ts/presets.ts","webpack:///./src/ts/parameters.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","getElementById","context","getContext","width","height","lineWidth","animationLength","drawing","fourier","computeFourierSeries","fourierPoints","needToRestart","Parameters","clearObservers","push","startTimestamp","requestAnimationFrame","mainLoop","timestamp","pathLength","speed","Canvas","setIndicatorText","order","toLocaleString","clearRect","computePoint","displayCircles","strokeStyle","drawCircles","displayCurve","beginPath","moveTo","x","y","point","lineTo","stroke","closePath","draw","displaySegments","drawPathToPoint","main","this","points","Presets","Arlequin","length","LineDrawing","distance","interpolate","p1","p2","dX","dY","Math","sqrt","desiredLength","currentLength","lastPoint","nextPoint","segmentLength","interpolationFactor","finalPoint","console","log","nbSteps","ceil","stepSize","dT","samples","lastPointIndex","iStep","desiredT","iPoint","exactPoint","two_pi_t","PI","coefficients","floor","cx","cy","sample","TWO_PI_N_T","cos","sin","magnitude","phase","atan2","FourierSeries","TWO_PI","_coefficients","max","computeAmountOfCoefficients","coefficient","centerX","centerY","radius","arc","min","Dog","Triangle","Round","controlId","callObservers","observersList","observer","observers","display","Checkbox","setChecked","Range","setValue","isChecked","addObserver","checked","getValue"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { FourierSeries } from \"./fourier-series\";\r\nimport LineDrawing from \"./line-drawing\";\r\nimport IPoint from \"./point\";\r\n\r\nimport { Parameters } from \"./parameters\";\r\n\r\ndeclare const Canvas: any;\r\n\r\nfunction main() {\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n    canvas.width = 512;\r\n    canvas.height = 512;\r\n    context.lineWidth = 1;\r\n\r\n    const drawing = new LineDrawing();\r\n    const fourier: FourierSeries = drawing.computeFourierSeries(300);\r\n    let fourierPoints: IPoint[] = [];\r\n\r\n    let animationLength: number; // in milliseconds\r\n\r\n    let needToRestart: boolean = true;\r\n    Parameters.clearObservers.push(() => needToRestart = true);\r\n\r\n    let startTimestamp: DOMHighResTimeStamp = null;\r\n    function mainLoop(timestamp: DOMHighResTimeStamp) {\r\n        let t = (timestamp - startTimestamp) / animationLength;\r\n        if (t > 1) {\r\n            needToRestart = true;\r\n        }\r\n\r\n        if (needToRestart) {\r\n            needToRestart = false;\r\n            animationLength = 1000 * drawing.pathLength / (Parameters.speed + 0.001);\r\n            startTimestamp = timestamp;\r\n            t = 0;\r\n            fourierPoints = [];\r\n            Canvas.setIndicatorText(\"fourier-order\", Parameters.order.toLocaleString());\r\n        }\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        fourierPoints.push(fourier.computePoint(Parameters.order, t));\r\n\r\n        if (Parameters.displayCircles) {\r\n            context.strokeStyle = \"rgba(255,255,255,0.3)\";\r\n            fourier.drawCircles(context, Parameters.order, t);\r\n        }\r\n\r\n        if (Parameters.displayCurve) {\r\n            context.strokeStyle = \"white\";\r\n            context.beginPath();\r\n            context.moveTo(fourierPoints[0].x, fourierPoints[0].y);\r\n            for (const point of fourierPoints) {\r\n                context.lineTo(point.x, point.y);\r\n            }\r\n            context.stroke();\r\n            context.closePath();\r\n        }\r\n\r\n        context.strokeStyle = \"green\";\r\n        drawing.draw(context, t);\r\n\r\n        if (Parameters.displaySegments) {\r\n            context.strokeStyle = \"red\";\r\n            fourier.drawPathToPoint(context, Parameters.order, t);\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { FourierSeries, IFourierCoefficient } from \"./fourier-series\";\r\nimport IPoint from \"./point\";\r\nimport * as Presets from \"./presets\";\r\n\r\nclass LineDrawing {\r\n    /* Assumes t is between 0 and 1 included. */\r\n    private static interpolate(p1: IPoint, p2: IPoint, t: number): IPoint {\r\n        return {\r\n            x: p1.x * (1 - t) + p2.x * t,\r\n            y: p1.y * (1 - t) + p2.y * t,\r\n        };\r\n    }\r\n\r\n    private static distance(p1: IPoint, p2: IPoint): number {\r\n        const dX = p1.x - p2.x;\r\n        const dY = p1.y - p2.y;\r\n        return Math.sqrt(dX * dX + dY * dY);\r\n    }\r\n\r\n    private readonly points: IPoint[];\r\n    public readonly pathLength: number;\r\n\r\n    public constructor() {\r\n        this.points = Presets.Arlequin;\r\n\r\n        this.pathLength = 0;\r\n        for (let i = 0; i < this.points.length - 1; i++) {\r\n            this.pathLength += LineDrawing.distance(this.points[i], this.points[i + 1]);\r\n        }\r\n    }\r\n\r\n    /* Assumes t is between 0 and 1 included. */\r\n    public draw(context: CanvasRenderingContext2D, t: number) {\r\n        context.beginPath();\r\n        context.moveTo(this.points[0].x, this.points[0].y);\r\n\r\n        const desiredLength = t * this.pathLength;\r\n\r\n        let currentLength = 0;\r\n\r\n        let i: number;\r\n        for (i = 0; i < this.points.length - 1; i++) {\r\n            const lastPoint = this.points[i];\r\n            const nextPoint = this.points[i + 1];\r\n            const segmentLength = LineDrawing.distance(lastPoint, nextPoint);\r\n\r\n            if (currentLength + segmentLength < desiredLength) {\r\n                currentLength += segmentLength;\r\n                context.lineTo(nextPoint.x, nextPoint.y);\r\n            } else {\r\n                const interpolationFactor = (desiredLength - currentLength) / segmentLength;\r\n                const finalPoint = LineDrawing.interpolate(lastPoint, nextPoint, interpolationFactor);\r\n                context.lineTo(finalPoint.x, finalPoint.y);\r\n                currentLength += LineDrawing.distance(lastPoint, finalPoint);\r\n                break;\r\n            }\r\n        }\r\n\r\n        console.log(i + \" current: \" + currentLength + \" / \" + desiredLength);\r\n\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n\r\n    public computeFourierSeries(order: number): FourierSeries {\r\n        const nbSteps = Math.ceil(0.5 * this.pathLength); // number of integration steps\r\n        const stepSize = this.pathLength / nbSteps;\r\n        const dT = 1 / nbSteps;\r\n\r\n        /* Precompute function samples to avoid computing them for each coefficient. */\r\n        interface IFunctionSample {\r\n            x: number;\r\n            y: number;\r\n            two_pi_t: number; // t is where the drawing was evaluated\r\n        }\r\n\r\n        const samples: IFunctionSample[] = [];\r\n        {\r\n            let currentLength = 0;\r\n            let lastPointIndex = 0;\r\n            for (let iStep = 0; iStep < nbSteps; iStep++) {\r\n                const desiredT = (iStep + 0.5) * dT;\r\n                const desiredLength = (iStep + 0.5) * stepSize;\r\n\r\n                for (let iPoint = lastPointIndex; iPoint < this.points.length - 1; iPoint++) {\r\n                    const lastPoint = this.points[iPoint];\r\n                    const nextPoint = this.points[iPoint + 1];\r\n                    const segmentLength = LineDrawing.distance(lastPoint, nextPoint);\r\n\r\n                    if (currentLength + segmentLength < desiredLength) {\r\n                        currentLength += segmentLength;\r\n                        lastPointIndex = iPoint + 1;\r\n                    } else {\r\n                        const interpolationFactor = (desiredLength - currentLength) / segmentLength;\r\n                        const exactPoint = LineDrawing.interpolate(lastPoint, nextPoint, interpolationFactor);\r\n                        samples.push({\r\n                            x: exactPoint.x,\r\n                            y: exactPoint.y,\r\n                            two_pi_t: 2 * Math.PI * desiredT,\r\n                        });\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const coefficients: IFourierCoefficient[] = [];\r\n        for (let i = 0; i < 2 * order + 1; i++) {\r\n            let n = Math.floor((i + 1) / 2); // n is the index of the coefficient we're about to compute\r\n            if (i > 0 && i % 2 === 0) {\r\n                n *= -1;\r\n            }\r\n\r\n            let cx = 0;\r\n            let cy = 0;\r\n            for (const sample of samples) {\r\n                const TWO_PI_N_T = n * sample.two_pi_t;\r\n                const cos = Math.cos(TWO_PI_N_T);\r\n                const sin = Math.sin(TWO_PI_N_T);\r\n\r\n                cx += dT * (sample.x * cos + sample.y * sin);\r\n                cy += dT * (sample.y * cos - sample.x * sin);\r\n            }\r\n\r\n            coefficients.push({\r\n                magnitude: Math.sqrt(cx * cx + cy * cy),\r\n                phase: Math.atan2(cy, cx),\r\n                n,\r\n            });\r\n        }\r\n\r\n        return new FourierSeries(coefficients);\r\n    }\r\n}\r\n\r\nexport default LineDrawing;\r\n","import IPoint from \"./point\";\r\n\r\ninterface IFourierCoefficient {\r\n    magnitude: number;\r\n    phase: number;\r\n    n: number;\r\n}\r\n\r\nconst TWO_PI = 2 * Math.PI;\r\n\r\nclass FourierSeries {\r\n    private readonly _coefficients: IFourierCoefficient[];\r\n\r\n    public constructor(coefficients: IFourierCoefficient[]) {\r\n        this._coefficients = coefficients;\r\n    }\r\n\r\n    /* Assumes t is between 0 and 1 included. */\r\n    public computePoint(order: number, t: number): IPoint {\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        const max = this.computeAmountOfCoefficients(order);\r\n        for (let i = 0; i < max; i++) {\r\n            const coefficient = this._coefficients[i];\r\n            const TWO_PI_N_T = TWO_PI * coefficient.n * t;\r\n            x += coefficient.magnitude * Math.cos(TWO_PI_N_T + coefficient.phase);\r\n            y += coefficient.magnitude * Math.sin(TWO_PI_N_T + coefficient.phase);\r\n        }\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    public drawPathToPoint(context: CanvasRenderingContext2D, order: number, t: number): void {\r\n        let x = 0;\r\n        let y = 0;\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n\r\n        const max = this.computeAmountOfCoefficients(order);\r\n        for (let i = 0; i < max; i++) {\r\n            const coefficient = this._coefficients[i];\r\n            const TWO_PI_N_T = TWO_PI * coefficient.n * t;\r\n            x += coefficient.magnitude * Math.cos(TWO_PI_N_T + coefficient.phase);\r\n            y += coefficient.magnitude * Math.sin(TWO_PI_N_T + coefficient.phase);\r\n\r\n            context.lineTo(x, y);\r\n        }\r\n\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n\r\n    public drawCircles(context: CanvasRenderingContext2D, order: number, t: number): void {\r\n        function drawCircle(centerX: number, centerY: number, radius: number) {\r\n            context.beginPath();\r\n            context.arc(centerX, centerY, radius, 0, TWO_PI);\r\n            context.closePath();\r\n            context.stroke();\r\n        }\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        const max = this.computeAmountOfCoefficients(order);\r\n        for (let i = 0; i < max; i++) {\r\n            const coefficient = this._coefficients[i];\r\n            drawCircle(x, y, coefficient.magnitude);\r\n\r\n            const TWO_PI_N_T = TWO_PI * coefficient.n * t;\r\n            x += coefficient.magnitude * Math.cos(TWO_PI_N_T + coefficient.phase);\r\n            y += coefficient.magnitude * Math.sin(TWO_PI_N_T + coefficient.phase);\r\n        }\r\n    }\r\n\r\n    private computeAmountOfCoefficients(order: number): number {\r\n        return Math.min(this._coefficients.length, 1 + 2 * order);\r\n    }\r\n}\r\n\r\nexport {\r\n    IFourierCoefficient,\r\n    FourierSeries,\r\n};\r\n","import IPoint from \"./point\";\r\n\r\nconst arlequin: IPoint[] = [{x:79.8,y:73.8},{x:82.6,y:76},{x:85.8,y:77.7},{x:89.2,y:78.9},{x:92.7,y:79.7},{x:96.3,y:79.9},{x:99.9,y:79.7},{x:103.4,y:78.9},{x:106.8,y:77.6},{x:109.9,y:75.9},{x:112.9,y:73.8},{x:115.6,y:71.5},{x:118,y:68.9},{x:120.3,y:66},{x:122.3,y:63},{x:124.3,y:60},{x:126.4,y:57.1},{x:128.7,y:54.4},{x:131.2,y:51.8},{x:133.9,y:49.4},{x:136.8,y:47.3},{x:139.9,y:45.5},{x:143.2,y:44},{x:146.7,y:43},{x:150.3,y:42.6},{x:153.8,y:42.9},{x:157.3,y:44},{x:160.3,y:45.8},{x:162.9,y:48.3},{x:164.9,y:51.3},{x:166.3,y:54.6},{x:167.3,y:58.1},{x:167.8,y:61.7},{x:168,y:65.3},{x:168.1,y:68.9},{x:168.2,y:72.5},{x:168.6,y:76},{x:169.1,y:79.6},{x:169.8,y:83.1},{x:170.8,y:86.6},{x:172,y:90},{x:173.7,y:93.2},{x:175.7,y:96.2},{x:178.1,y:98.8},{x:181,y:101},{x:184.2,y:102.6},{x:187.6,y:103.6},{x:189.7,y:104.2},{x:186.2,y:104.1},{x:182.7,y:103},{x:179.5,y:101.5},{x:176.4,y:99.6},{x:173.4,y:97.6},{x:170.6,y:95.3},{x:168,y:92.9},{x:165.5,y:90.2},{x:163.3,y:87.4},{x:161.2,y:84.5},{x:159.3,y:81.4},{x:157.1,y:78.6},{x:154.6,y:76},{x:151.8,y:73.7},{x:148.8,y:71.8},{x:145.5,y:70.3},{x:142.1,y:69.2},{x:138.5,y:68.6},{x:134.9,y:68.6},{x:131.5,y:69.4},{x:128.6,y:71.5},{x:126.3,y:74.3},{x:124.5,y:77.4},{x:124.1,y:81},{x:125.9,y:83.9},{x:129.2,y:85.3},{x:132.8,y:85.4},{x:136.1,y:84},{x:137.8,y:81},{x:136.6,y:77.8},{x:133.2,y:77.7},{x:130.5,y:80},{x:129.3,y:83.4},{x:131,y:86.4},{x:134.3,y:87.8},{x:137.8,y:88.7},{x:141.4,y:89.1},{x:144.9,y:88.9},{x:148.2,y:87.4},{x:149.7,y:84.3},{x:148.5,y:81},{x:145.2,y:79.9},{x:141.7,y:80.9},{x:138.5,y:82.6},{x:136.1,y:85.2},{x:133.9,y:88},{x:131.6,y:90.8},{x:129.7,y:93.8},{x:128.7,y:97.3},{x:130,y:100.5},{x:133.4,y:101.4},{x:136.6,y:99.9},{x:138.8,y:97},{x:138.8,y:93.6},{x:136.8,y:90.6},{x:134.1,y:88.3},{x:130.8,y:86.9},{x:127.2,y:87.1},{x:124.4,y:89.3},{x:123.1,y:92.6},{x:122.6,y:96.2},{x:122.7,y:99.8},{x:123.4,y:103.3},{x:124.7,y:106.7},{x:126.7,y:109.6},{x:129.4,y:112},{x:132.6,y:113.6},{x:136.1,y:114.4},{x:139.7,y:114.3},{x:143.2,y:113.6},{x:146.6,y:112.2},{x:149.2,y:109.9},{x:148,y:107.2},{x:144.5,y:107.8},{x:141.7,y:109.9},{x:140.4,y:113.3},{x:140.6,y:116.9},{x:141.9,y:120.2},{x:144.4,y:122.7},{x:147.9,y:123.3},{x:151.2,y:122},{x:154.3,y:120},{x:156.7,y:117.4},{x:156,y:114.3},{x:152.5,y:113.6},{x:149.3,y:114.9},{x:149.1,y:118.3},{x:151.3,y:121.1},{x:154.4,y:122.8},{x:158,y:123.4},{x:161.5,y:122.7},{x:164.3,y:120.5},{x:166,y:117.3},{x:166.6,y:113.8},{x:164.8,y:110.8},{x:161.3,y:110.4},{x:158.9,y:112.8},{x:159.9,y:116.2},{x:162.3,y:118.8},{x:165.5,y:120.4},{x:169,y:119.8},{x:171.7,y:117.4},{x:172.9,y:114.2},{x:169.9,y:112.6},{x:167.4,y:114.7},{x:168.2,y:118.2},{x:170.5,y:120.9},{x:173.8,y:122.1},{x:177.4,y:121.7},{x:180.8,y:120.5},{x:184.1,y:119.3},{x:187.7,y:118.6},{x:191.3,y:118.4},{x:194.8,y:118.7},{x:198.3,y:119.6},{x:201.7,y:120.8},{x:204.9,y:122.5},{x:207.8,y:124.6},{x:210.5,y:127},{x:212.9,y:129.7},{x:214.9,y:132.7},{x:216.5,y:135.9},{x:217.7,y:139.3},{x:218.3,y:142.8},{x:218.4,y:146.4},{x:217.8,y:150},{x:216.4,y:153.3},{x:214.5,y:156.3},{x:212.2,y:159.1},{x:209.5,y:161.5},{x:206.4,y:163.4},{x:203.1,y:164.7},{x:199.6,y:165.3},{x:196,y:165.1},{x:192.5,y:164.3},{x:189.2,y:162.9},{x:186.1,y:160.9},{x:183.4,y:158.6},{x:180.9,y:156},{x:178.8,y:153.1},{x:177.2,y:149.9},{x:176.1,y:146.5},{x:175.6,y:142.9},{x:175.9,y:139.3},{x:177,y:135.9},{x:179,y:133},{x:181.9,y:130.8},{x:185.3,y:129.6},{x:188.9,y:129.4},{x:192.4,y:129.8},{x:195.9,y:130.8},{x:199.2,y:132.1},{x:202.5,y:133.7},{x:205.5,y:135.7},{x:208.2,y:138.1},{x:210.6,y:140.7},{x:212.7,y:143.7},{x:214.4,y:146.8},{x:216,y:150.1},{x:217.5,y:153.3},{x:219.2,y:156.5},{x:220.9,y:159.7},{x:222.5,y:162.9},{x:224.2,y:166.1},{x:226,y:169.2},{x:227.8,y:172.3},{x:229.6,y:175.4},{x:231.6,y:178.4},{x:233.7,y:181.4},{x:235.8,y:184.3},{x:238.1,y:187},{x:240.6,y:189.6},{x:243.3,y:192.1},{x:246.1,y:194.2},{x:249.3,y:196},{x:252.7,y:197.2},{x:256.1,y:198.2},{x:259.7,y:198.9},{x:263.2,y:198.9},{x:265.9,y:196.8},{x:265,y:193.4},{x:262.5,y:190.9},{x:259.3,y:189.2},{x:255.7,y:188.8},{x:252.4,y:190.1},{x:249.9,y:192.7},{x:248.3,y:195.9},{x:247.4,y:199.3},{x:247.2,y:202.9},{x:247.6,y:206.5},{x:248.7,y:209.9},{x:250.4,y:213.1},{x:252.5,y:216},{x:254.9,y:218.7},{x:257.6,y:221.1},{x:260.5,y:223.2},{x:263.6,y:225},{x:266.8,y:226.6},{x:270.2,y:227.9},{x:273.7,y:228.9},{x:277.2,y:229.6},{x:280.8,y:230},{x:284.3,y:230.2},{x:287.9,y:230.2},{x:291.5,y:230},{x:295.1,y:229.7},{x:298.7,y:229.2},{x:302.2,y:228.6},{x:305.8,y:227.8},{x:309.3,y:227},{x:312.8,y:226.1},{x:316.2,y:225.1},{x:319.7,y:224.1},{x:323.2,y:223.3},{x:326.7,y:222.7},{x:330.3,y:222.5},{x:333.8,y:223.2},{x:336.7,y:225.2},{x:338.6,y:228.3},{x:339.2,y:231.8},{x:338.3,y:235.3},{x:335.7,y:237.8},{x:332.3,y:238.7},{x:328.9,y:237.6},{x:326.4,y:235.1},{x:324.8,y:231.8},{x:323.8,y:228.4},{x:323.1,y:224.9},{x:322.7,y:221.3},{x:322.7,y:217.7},{x:323,y:214.1},{x:323.9,y:210.6},{x:325.5,y:207.4},{x:328.4,y:205.3},{x:331.9,y:205.1},{x:335.3,y:206.4},{x:338.3,y:208.3},{x:341.1,y:210.6},{x:343.7,y:213.1},{x:346.4,y:215.3},{x:347.4,y:212.4},{x:346.8,y:208.8},{x:345.9,y:205.3},{x:344.8,y:201.9},{x:342.2,y:200},{x:340.1,y:202.9},{x:338.8,y:206.3},{x:337.8,y:209.7},{x:336,y:212.8},{x:333.5,y:215.3},{x:330.4,y:217.2},{x:326.9,y:217.9},{x:323.8,y:216.3},{x:322.9,y:212.9},{x:323.3,y:209.3},{x:324.8,y:206.1},{x:328,y:204.6},{x:331.6,y:204.5},{x:335.1,y:205.5},{x:338.2,y:207.2},{x:341,y:209.5},{x:343.3,y:212.2},{x:345.1,y:215.4},{x:346.2,y:218.8},{x:344,y:221.4},{x:340.5,y:221.5},{x:337.8,y:219.3},{x:336.6,y:215.9},{x:336.3,y:212.3},{x:336.8,y:208.8},{x:337.4,y:205.2},{x:338,y:201.7},{x:338.6,y:198.1},{x:339.1,y:194.6},{x:339.1,y:191},{x:339.1,y:187.4},{x:339.1,y:183.8},{x:339.2,y:180.2},{x:339.5,y:176.6},{x:339.8,y:173},{x:340.2,y:169.4},{x:340.6,y:165.8},{x:341.1,y:162.3},{x:341.8,y:158.7},{x:342.5,y:155.2},{x:343.3,y:151.7},{x:344.3,y:148.2},{x:345.2,y:144.8},{x:346.2,y:141.3},{x:347.3,y:137.9},{x:348.4,y:134.4},{x:349.5,y:131},{x:350.8,y:127.7},{x:352.5,y:124.5},{x:354.7,y:124.7},{x:355.1,y:128.3},{x:355.1,y:131.9},{x:354.9,y:135.5},{x:354.6,y:139.1},{x:354.2,y:142.7},{x:353.7,y:146.2},{x:353.1,y:149.8},{x:352.4,y:153.3},{x:351.4,y:156.7},{x:350.4,y:160.2},{x:349.5,y:163.7},{x:348.5,y:167.2},{x:347.5,y:170.6},{x:346.6,y:174.1},{x:345.6,y:177.6},{x:344.6,y:181},{x:343.7,y:184.5},{x:342.7,y:188},{x:341.8,y:191.4},{x:340.9,y:194.9},{x:339.9,y:198.4},{x:339,y:201.9},{x:338,y:205.3},{x:337.1,y:208.8},{x:336.2,y:212.3},{x:335.3,y:215.8},{x:334.4,y:219.3},{x:333.5,y:222.8},{x:332.6,y:226.3},{x:331.8,y:229.8},{x:330.9,y:233.2},{x:330.1,y:236.8},{x:329.3,y:240.3},{x:328.5,y:243.8},{x:327.9,y:247.3},{x:327.3,y:250.9},{x:327.3,y:254.5},{x:327.4,y:258.1},{x:327.5,y:261.7},{x:327.8,y:265.3},{x:328.1,y:268.9},{x:328.5,y:272.4},{x:329,y:276},{x:329.7,y:279.5},{x:330.6,y:283},{x:331.8,y:286.4},{x:333.5,y:289.6},{x:336.3,y:291.7},{x:339.7,y:291},{x:342.4,y:288.6},{x:344.5,y:285.7},{x:346.3,y:282.6},{x:347.9,y:279.4},{x:349.2,y:276},{x:350.2,y:272.6},{x:350.7,y:269},{x:350.8,y:265.4},{x:350.7,y:261.8},{x:350.5,y:258.2},{x:350.4,y:254.6},{x:350.3,y:251},{x:350.3,y:247.4},{x:350.1,y:243.8},{x:349.8,y:240.2},{x:349.4,y:236.6},{x:348.8,y:233.1},{x:348.2,y:229.5},{x:347.4,y:226},{x:346.4,y:222.6},{x:345.4,y:219.1},{x:344.2,y:215.7},{x:342.9,y:212.4},{x:341.3,y:209.1},{x:339.6,y:205.9},{x:337.7,y:202.9},{x:335.4,y:200.2},{x:332.4,y:198.2},{x:329.9,y:200.2},{x:331.5,y:203.3},{x:334.6,y:205.1},{x:336.8,y:203.2},{x:335.7,y:199.8},{x:333.4,y:197},{x:330.3,y:195.1},{x:326.9,y:194.1},{x:323.3,y:193.9},{x:319.7,y:194.4},{x:316.3,y:195.6},{x:313.2,y:197.4},{x:310.4,y:199.6},{x:307.7,y:202},{x:304.9,y:204.3},{x:301.8,y:206.2},{x:298.4,y:207.3},{x:294.9,y:207.6},{x:291.3,y:207.4},{x:287.7,y:207.2},{x:284.1,y:206.9},{x:280.5,y:206.7},{x:276.9,y:206.4},{x:273.3,y:205.9},{x:269.9,y:204.9},{x:266.7,y:203.2},{x:264.5,y:200.4},{x:263,y:197.1},{x:261.8,y:193.7},{x:260.8,y:190.3},{x:259.8,y:186.8},{x:258.4,y:183.5},{x:256.8,y:180.3},{x:255,y:177.2},{x:252.9,y:174.3},{x:250.5,y:171.5},{x:248,y:168.9},{x:245.4,y:166.5},{x:242.6,y:164.2},{x:239.6,y:162.2},{x:236.6,y:160.3},{x:233.4,y:158.7},{x:230,y:157.4},{x:226.5,y:156.4},{x:223.1,y:155.5},{x:219.5,y:154.8},{x:216,y:154.3},{x:212.4,y:154.2},{x:208.8,y:154.7},{x:205.5,y:156.1},{x:202.9,y:158.5},{x:201.1,y:161.6},{x:199.9,y:165},{x:199.1,y:168.6},{x:198.8,y:172.1},{x:199.2,y:175.7},{x:200.4,y:179.1},{x:202.4,y:182},{x:205.2,y:184.3},{x:208.4,y:186},{x:211.8,y:187.1},{x:215.4,y:187.3},{x:218.8,y:186.3},{x:221.6,y:184.1},{x:223.5,y:181},{x:223.8,y:177.5},{x:222.1,y:174.4},{x:219.1,y:172.5},{x:215.6,y:171.8},{x:212,y:171.4},{x:208.4,y:171.4},{x:204.8,y:171.9},{x:201.3,y:172.8},{x:198,y:174.2},{x:194.9,y:175.9},{x:191.9,y:178},{x:189.1,y:180.3},{x:186.5,y:182.7},{x:183.9,y:185.2},{x:181.3,y:187.7},{x:178.7,y:190.2},{x:175.9,y:192.5},{x:173.1,y:194.8},{x:170.2,y:196.9},{x:167.2,y:198.8},{x:164,y:200.6},{x:160.8,y:202},{x:157.3,y:203.1},{x:153.8,y:203.6},{x:150.2,y:203.4},{x:146.7,y:202.4},{x:143.5,y:200.8},{x:140.4,y:198.9},{x:137.5,y:196.8},{x:134.9,y:194.4},{x:132.5,y:191.6},{x:130.5,y:188.7},{x:128.8,y:185.5},{x:127.6,y:182.1},{x:126.7,y:178.6},{x:126.2,y:175},{x:126,y:171.5},{x:126.2,y:167.9},{x:126.6,y:164.3},{x:127.2,y:160.7},{x:128.1,y:157.3},{x:129.4,y:153.9},{x:131.1,y:150.7},{x:133.3,y:147.9},{x:136,y:145.5},{x:139.3,y:143.9},{x:142.8,y:143.4},{x:146.3,y:144.1},{x:149.2,y:146.2},{x:150.7,y:149.4},{x:150.5,y:153},{x:149,y:156.3},{x:146.7,y:159},{x:143.9,y:161.3},{x:140.7,y:162.9},{x:137.3,y:164},{x:133.7,y:164.2},{x:130.2,y:163.2},{x:127,y:161.6},{x:123.9,y:159.7},{x:121,y:157.6},{x:118.2,y:155.3},{x:115.7,y:152.8},{x:113.4,y:150},{x:111.3,y:147.1},{x:109.6,y:143.9},{x:108.1,y:140.7},{x:106.9,y:137.3},{x:105.9,y:133.8},{x:105.3,y:130.3},{x:105.1,y:126.7},{x:105.6,y:123.1},{x:106.8,y:119.7},{x:108.8,y:116.7},{x:111.5,y:114.3},{x:114.6,y:112.7},{x:118.2,y:111.9},{x:121.7,y:112.1},{x:125.1,y:113.4},{x:127.7,y:115.8},{x:129,y:119.1},{x:129.1,y:122.7},{x:128.6,y:126.3},{x:127.5,y:129.7},{x:126,y:133},{x:124,y:135.9},{x:121.6,y:138.6},{x:118.9,y:141},{x:116,y:143.2},{x:113.1,y:145.3},{x:110.1,y:147.2},{x:106.9,y:148.9},{x:103.5,y:150.2},{x:100,y:151.1},{x:96.5,y:151.6},{x:92.9,y:151.5},{x:89.4,y:150.7},{x:86.1,y:149.3},{x:83.1,y:147.3},{x:80.5,y:144.8},{x:78,y:142.2},{x:75.6,y:139.5},{x:73.4,y:136.6},{x:71.4,y:133.6},{x:69.7,y:130.5},{x:68.4,y:127.1},{x:67.7,y:123.6},{x:67.8,y:120},{x:68.7,y:116.5},{x:70.4,y:113.3},{x:72.6,y:110.5},{x:75.2,y:108},{x:78,y:105.7},{x:80.9,y:103.7},{x:84.1,y:101.9},{x:87.4,y:100.5},{x:90.8,y:99.5},{x:94.4,y:99.1},{x:98,y:99.3},{x:101.4,y:100.3},{x:104.6,y:101.9},{x:107.5,y:104},{x:110,y:106.7},{x:111.7,y:109.8},{x:112.6,y:113.3},{x:112.8,y:116.9},{x:112.4,y:120.5},{x:111.3,y:123.9},{x:109.7,y:127.1},{x:107.6,y:130},{x:105,y:132.5},{x:102.2,y:134.8},{x:99.5,y:137.1},{x:96.7,y:139.5},{x:94,y:141.8},{x:91.3,y:144.2},{x:88.6,y:146.5},{x:85.8,y:148.9},{x:83,y:151.1},{x:80.2,y:153.4},{x:77.3,y:155.5},{x:74.3,y:157.5},{x:71.2,y:159.3},{x:68,y:160.8},{x:64.6,y:162.1},{x:61.1,y:163.2},{x:57.9,y:164.8},{x:55,y:166.8},{x:52.2,y:169.1},{x:49.7,y:171.7},{x:47.2,y:174.4},{x:45,y:177.2},{x:42.8,y:180},{x:40.8,y:183},{x:38.9,y:186.1},{x:37.3,y:189.3},{x:35.9,y:192.6},{x:35,y:196.1},{x:34.8,y:199.7},{x:36.1,y:202.9},{x:39.3,y:204.5},{x:42.8,y:203.9},{x:46,y:202.2},{x:48.7,y:199.9},{x:50.9,y:197},{x:51.9,y:193.6},{x:50.9,y:190.2},{x:48.3,y:187.8},{x:45,y:186.3},{x:41.5,y:185.9},{x:37.9,y:186.5},{x:34.6,y:187.9},{x:31.6,y:189.8},{x:28.9,y:192.2},{x:26.6,y:194.9},{x:24.6,y:197.9},{x:22.9,y:201.1},{x:21.4,y:204.4},{x:20.3,y:207.8},{x:19.4,y:211.3},{x:18.6,y:214.8},{x:18.1,y:218.4},{x:17.6,y:222},{x:17.2,y:225.5},{x:17,y:229.1},{x:16.9,y:232.7},{x:16.9,y:236.3},{x:17,y:239.9},{x:17.3,y:243.5},{x:17.8,y:247.1},{x:18.5,y:250.6},{x:19.5,y:254.1},{x:20.7,y:257.5},{x:22.2,y:260.7},{x:24.2,y:263.7},{x:26.6,y:266.4},{x:29.6,y:268.3},{x:33,y:269.5},{x:36.6,y:269.3},{x:39.4,y:267.2},{x:41.7,y:264.4},{x:43.2,y:261.2},{x:43.4,y:257.6},{x:41.4,y:254.7},{x:38.1,y:253.4},{x:34.5,y:253.8},{x:31.4,y:255.5},{x:28.7,y:257.9},{x:26.7,y:260.8},{x:25.3,y:264.2},{x:24.8,y:267.7},{x:24.9,y:271.3},{x:25.8,y:274.8},{x:27.2,y:278.1},{x:29.2,y:281.1},{x:31.8,y:283.6},{x:34.9,y:285.4},{x:38.4,y:286.1},{x:42,y:285.7},{x:45.3,y:284.3},{x:48.2,y:282.2},{x:50.7,y:279.6},{x:53.1,y:276.9},{x:54.8,y:273.8},{x:55.2,y:270.2},{x:55.1,y:266.6},{x:54.8,y:263},{x:53.6,y:259.6},{x:51.6,y:256.7},{x:48.8,y:254.4},{x:45.8,y:252.5},{x:42.7,y:250.7},{x:39.7,y:248.6},{x:36.9,y:246.4},{x:34.2,y:244},{x:31.7,y:241.4},{x:29.4,y:238.6},{x:27.4,y:235.7},{x:25.6,y:232.5},{x:24.1,y:229.3},{x:22.8,y:225.9},{x:21.9,y:222.4},{x:21.2,y:218.9},{x:20.8,y:215.3},{x:20.7,y:211.7},{x:20.9,y:208.1},{x:21.3,y:204.5},{x:21.9,y:201},{x:22.7,y:197.5},{x:23.8,y:194.1},{x:25,y:190.7},{x:26.3,y:187.3},{x:27.8,y:184},{x:29.3,y:180.8},{x:30.9,y:177.6},{x:32.7,y:174.4},{x:34.5,y:171.3},{x:36.5,y:168.3},{x:38.6,y:165.4},{x:40.8,y:162.6},{x:43.2,y:159.8},{x:45.7,y:157.3},{x:48.4,y:154.9},{x:51.2,y:152.6},{x:54.2,y:150.6},{x:57.3,y:148.8},{x:60.5,y:147.2},{x:63.9,y:145.9},{x:67.3,y:144.9},{x:70.8,y:144.1},{x:74.4,y:143.6},{x:78,y:143.3},{x:81.6,y:143.2},{x:85.2,y:143.4},{x:88.7,y:144},{x:92.2,y:145},{x:95.5,y:146.4},{x:98.6,y:148.2},{x:101.4,y:150.5},{x:103.9,y:153},{x:106.1,y:155.9},{x:107.9,y:159},{x:109.4,y:162.3},{x:110.5,y:165.7},{x:111.2,y:169.2},{x:111.6,y:172.8},{x:111.4,y:176.4},{x:110.7,y:179.9},{x:109.6,y:183.4},{x:108.1,y:186.6},{x:106.1,y:189.6},{x:103.8,y:192.4},{x:101.1,y:194.7},{x:97.9,y:196.4},{x:94.4,y:197.1},{x:90.9,y:196.7},{x:87.6,y:195.1},{x:84.7,y:193},{x:82.3,y:190.4},{x:80.3,y:187.4},{x:78.9,y:184.1},{x:78,y:180.6},{x:77.7,y:177},{x:77.8,y:173.4},{x:78.3,y:169.9},{x:79.2,y:166.4},{x:80.8,y:163.2},{x:83.1,y:160.4},{x:86,y:158.2},{x:89.2,y:156.7},{x:92.7,y:155.8},{x:96.3,y:155.7},{x:99.7,y:156.7},{x:102.5,y:159},{x:104.2,y:162.1},{x:104.9,y:165.6},{x:104.7,y:169.2},{x:104,y:172.8},{x:103.1,y:176.3},{x:102.4,y:179.8},{x:101.7,y:183.3},{x:101.2,y:186.9},{x:100.8,y:190.4},{x:100.4,y:194},{x:100.2,y:197.6},{x:100.2,y:201.2},{x:100.2,y:204.8},{x:100.3,y:208.4},{x:100.6,y:212},{x:101,y:215.6},{x:101.6,y:219.1},{x:102.3,y:222.7},{x:103.2,y:226.1},{x:104.4,y:229.6},{x:105.8,y:232.9},{x:107.6,y:236},{x:109.9,y:238.8},{x:112.7,y:241},{x:116,y:242.3},{x:119.6,y:242.2},{x:123,y:241},{x:126.1,y:239.2},{x:128.8,y:236.9},{x:131.4,y:234.3},{x:133.8,y:231.6},{x:136,y:228.8},{x:137.9,y:225.8},{x:139.6,y:222.5},{x:140.6,y:219.1},{x:140.8,y:215.5},{x:139.5,y:212.2},{x:136.5,y:210.4},{x:133,y:210.9},{x:130.2,y:213.1},{x:128.3,y:216.2},{x:126.9,y:219.5},{x:126.4,y:223},{x:126.7,y:226.6},{x:127.8,y:230},{x:129.5,y:233.2},{x:131.7,y:236.1},{x:134.3,y:238.5},{x:137.3,y:240.5},{x:140.6,y:241.9},{x:144.1,y:242.7},{x:147.7,y:242.7},{x:151.2,y:242},{x:154.5,y:240.5},{x:157.4,y:238.4},{x:160.2,y:236.1},{x:163.3,y:234.2},{x:166.6,y:232.9},{x:170.1,y:232.3},{x:173.7,y:232.3},{x:177.2,y:233.2},{x:180.4,y:234.9},{x:183.2,y:237.1},{x:185.7,y:239.7},{x:187.8,y:242.6},{x:189.6,y:245.7},{x:191,y:249},{x:191.9,y:252.5},{x:192.2,y:256.1},{x:191.9,y:259.7},{x:190.8,y:263.1},{x:189.1,y:266.3},{x:187,y:269.2},{x:184.4,y:271.7},{x:181.5,y:273.8},{x:178.3,y:275.5},{x:174.9,y:276.8},{x:171.4,y:277.6},{x:167.8,y:277.8},{x:164.3,y:277.6},{x:160.7,y:277},{x:157.3,y:276},{x:154,y:274.5},{x:151,y:272.5},{x:148.4,y:270},{x:146.5,y:266.9},{x:145.2,y:263.6},{x:144.7,y:260},{x:145,y:256.4},{x:145.9,y:253},{x:147.8,y:250},{x:150.7,y:247.9},{x:154.1,y:246.8},{x:157.7,y:246.6},{x:161.3,y:247},{x:164.8,y:248},{x:168.1,y:249.4},{x:171.2,y:251.1},{x:174.2,y:253.1},{x:177,y:255.4},{x:179.6,y:257.9},{x:182,y:260.6},{x:184.1,y:263.5},{x:186,y:266.6},{x:187.7,y:269.7},{x:189.2,y:273},{x:190.6,y:276.3},{x:191.9,y:279.7},{x:192.9,y:283.1},{x:193.7,y:286.6},{x:194.2,y:290.2},{x:194.5,y:293.8},{x:194.5,y:297.4},{x:194.3,y:301},{x:194.1,y:304.6},{x:193.9,y:308.2},{x:193.7,y:311.8},{x:193.6,y:315.4},{x:193.3,y:318.9},{x:192.8,y:322.5},{x:192,y:326},{x:191.1,y:329.5},{x:190.1,y:332.9},{x:188.9,y:336.4},{x:187.7,y:339.7},{x:186.2,y:343},{x:184.6,y:346.2},{x:182.6,y:349.2},{x:180.3,y:352},{x:177.8,y:354.6},{x:174.9,y:356.7},{x:171.8,y:358.5},{x:168.3,y:359.5},{x:164.7,y:359.8},{x:161.2,y:359.2},{x:157.7,y:358.3},{x:154.3,y:357.2},{x:151.1,y:355.5},{x:149.1,y:352.6},{x:149.2,y:349},{x:150.8,y:345.8},{x:153.7,y:343.7},{x:157.1,y:342.6},{x:160.6,y:343},{x:163.4,y:345.3},{x:164.9,y:348.6},{x:165.6,y:352.1},{x:165.8,y:355.7},{x:165.5,y:359.3},{x:164.8,y:362.8},{x:163.7,y:366.2},{x:162.5,y:369.6},{x:161.2,y:373},{x:160.1,y:376.4},{x:159.2,y:379.9},{x:158.3,y:383.4},{x:157.6,y:386.9},{x:157.2,y:390.5},{x:157,y:394.1},{x:157.2,y:397.7},{x:157.7,y:401.2},{x:158.6,y:404.7},{x:159.9,y:408.1},{x:161.5,y:411.3},{x:163.4,y:414.3},{x:165.6,y:417.2},{x:168.1,y:419.9},{x:170.7,y:422.3},{x:173.4,y:424.6},{x:176.4,y:426.7},{x:179.4,y:428.7},{x:182.4,y:430.6},{x:185.4,y:432.7},{x:188.3,y:434.8},{x:191.1,y:437},{x:193.8,y:439.4},{x:196.3,y:442},{x:198.6,y:444.8},{x:200.6,y:447.8},{x:202.1,y:451},{x:203.2,y:454.4},{x:203.8,y:458},{x:204.1,y:461.6},{x:204.3,y:465.2},{x:204.4,y:468.8},{x:204.3,y:472.4},{x:203.9,y:475.9},{x:203.1,y:479.5},{x:201.4,y:482.6},{x:198.2,y:483.8},{x:194.9,y:482.3},{x:192.2,y:479.9},{x:190.1,y:477},{x:188.8,y:473.7},{x:189,y:470.1},{x:190.8,y:467},{x:193.7,y:464.9},{x:197,y:463.5},{x:200.4,y:462.6},{x:204,y:462.1},{x:207.6,y:462.3},{x:211,y:463.4},{x:213.9,y:465.5},{x:216,y:468.4},{x:217.3,y:471.8},{x:217.6,y:475.4},{x:216.8,y:478.9},{x:215,y:482},{x:212.4,y:484.4},{x:209.2,y:486.1},{x:205.7,y:486.9},{x:202.1,y:487.2},{x:198.5,y:487},{x:195,y:486.4},{x:191.6,y:485.2},{x:188.5,y:483.5},{x:185.7,y:481.1},{x:183.4,y:478.4},{x:181.6,y:475.3},{x:179.9,y:472.1},{x:178,y:469},{x:176.2,y:465.9},{x:174.4,y:462.8},{x:172.5,y:459.7},{x:170.5,y:456.7},{x:168.3,y:453.9},{x:166.1,y:451.1},{x:163.7,y:448.4},{x:161.3,y:445.7},{x:158.9,y:443},{x:156.5,y:440.3},{x:154.2,y:437.6},{x:151.9,y:434.7},{x:149.8,y:431.9},{x:147.7,y:429},{x:145.6,y:426},{x:143.7,y:423},{x:141.9,y:419.9},{x:140.1,y:416.7},{x:138.5,y:413.5},{x:136.9,y:410.3},{x:135.5,y:406.9},{x:134.2,y:403.6},{x:133.1,y:400.2},{x:132.2,y:396.7},{x:131.4,y:393.2},{x:130.8,y:389.6},{x:130.4,y:386.1},{x:130.2,y:382.5},{x:130.2,y:378.9},{x:130.3,y:375.3},{x:130.5,y:371.7},{x:130.9,y:368.1},{x:131.4,y:364.5},{x:132.1,y:361},{x:132.9,y:357.5},{x:134,y:354},{x:135.2,y:350.7},{x:136.8,y:347.4},{x:138.5,y:344.3},{x:140.6,y:341.3},{x:143,y:338.6},{x:145.7,y:336.2},{x:148.6,y:334.2},{x:151.8,y:332.6},{x:155.2,y:331.3},{x:158.7,y:330.5},{x:162.3,y:330.1},{x:165.9,y:330.1},{x:169.5,y:330.5},{x:172.9,y:331.6},{x:176.1,y:333.3},{x:178.8,y:335.5},{x:181.2,y:338.3},{x:183.1,y:341.3},{x:184.6,y:344.6},{x:185.8,y:348},{x:186.7,y:351.4},{x:187.4,y:355},{x:187.9,y:358.5},{x:188.2,y:362.1},{x:188.4,y:365.7},{x:188.4,y:369.3},{x:188.3,y:372.9},{x:188.1,y:376.5},{x:187.8,y:380.1},{x:187.4,y:383.7},{x:186.8,y:387.2},{x:186.2,y:390.8},{x:185.4,y:394.3},{x:184.5,y:397.8},{x:183.6,y:401.3},{x:182.6,y:404.7},{x:181.6,y:408.2},{x:180.5,y:411.6},{x:179.4,y:415},{x:178.2,y:418.4},{x:177,y:421.8},{x:175.8,y:425.2},{x:174.5,y:428.6},{x:173.2,y:431.9},{x:171.9,y:435.3},{x:170.7,y:438.7},{x:169.4,y:442},{x:168.3,y:445.5},{x:167.5,y:449},{x:167,y:452.5},{x:167,y:456.1},{x:167.3,y:459.7},{x:168.2,y:463.2},{x:169.7,y:466.5},{x:172,y:469.2},{x:175.3,y:470.5},{x:178.7,y:469.5},{x:181.3,y:467},{x:183.2,y:463.9},{x:184.7,y:460.7},{x:185.8,y:457.3},{x:186.8,y:453.8},{x:187.3,y:450.2},{x:187.4,y:446.6},{x:187,y:443.1},{x:186,y:439.6},{x:184.7,y:436.3},{x:183.1,y:433},{x:181.3,y:429.9},{x:179.5,y:426.8},{x:177.6,y:423.7},{x:175.8,y:420.6},{x:174,y:417.5},{x:172.1,y:414.4},{x:170.1,y:411.5},{x:167.9,y:408.6},{x:165.5,y:405.9},{x:163.1,y:403.2},{x:160.5,y:400.7},{x:157.8,y:398.3},{x:155.1,y:396},{x:152.3,y:393.7},{x:149.6,y:391.3},{x:147,y:388.9},{x:144.4,y:386.3},{x:142.1,y:383.6},{x:140,y:380.7},{x:138.1,y:377.6},{x:136.5,y:374.4},{x:135,y:371.1},{x:133.8,y:367.7},{x:132.8,y:364.2},{x:131.9,y:360.8},{x:131.1,y:357.2},{x:130.5,y:353.7},{x:129.9,y:350.1},{x:129.4,y:346.6},{x:129,y:343},{x:128.7,y:339.4},{x:128.5,y:335.8},{x:128.3,y:332.2},{x:128.3,y:328.6},{x:128.5,y:325},{x:128.7,y:321.4},{x:129.1,y:317.9},{x:129.6,y:314.3},{x:130.3,y:310.8},{x:131.1,y:307.3},{x:132.2,y:303.8},{x:133.4,y:300.4},{x:134.8,y:297.1},{x:136.4,y:293.9},{x:138.1,y:290.7},{x:140,y:287.6},{x:142,y:284.7},{x:144.2,y:281.8},{x:146.6,y:279.1},{x:149.3,y:276.8},{x:152.5,y:275.1},{x:156,y:274.7},{x:159,y:276.6},{x:160.4,y:279.9},{x:160.6,y:283.5},{x:160,y:287},{x:158.9,y:290.4},{x:157.3,y:293.7},{x:155.4,y:296.7},{x:153.1,y:299.5},{x:150.7,y:302.1},{x:148,y:304.5},{x:145.1,y:306.6},{x:141.8,y:308.2},{x:138.3,y:309},{x:134.7,y:309},{x:131.2,y:308.2},{x:127.9,y:306.9},{x:124.6,y:305.3},{x:121.5,y:303.5},{x:118.4,y:301.6},{x:115.5,y:299.6},{x:112.6,y:297.4},{x:109.9,y:295},{x:107.5,y:292.4},{x:105.3,y:289.5},{x:103.4,y:286.5},{x:102,y:283.2},{x:100.9,y:279.7},{x:100.4,y:276.2},{x:100.3,y:272.6},{x:100.6,y:269},{x:101.2,y:265.4},{x:102.1,y:261.9},{x:103.3,y:258.6},{x:105,y:255.4},{x:107,y:252.4},{x:109.4,y:249.7},{x:112.2,y:247.5},{x:115.4,y:245.8},{x:118.8,y:244.8},{x:122.4,y:245.1},{x:125.4,y:247},{x:127.2,y:250.1},{x:127.6,y:253.6},{x:127.2,y:257.2},{x:126.3,y:260.7},{x:125.1,y:264.1},{x:123.7,y:267.4},{x:122,y:270.6},{x:120.1,y:273.6},{x:117.9,y:276.5},{x:115.6,y:279.3},{x:113.2,y:281.9},{x:110.7,y:284.5},{x:108.2,y:287.1},{x:105.8,y:289.8},{x:103.5,y:292.6},{x:101.3,y:295.4},{x:99.2,y:298.3},{x:97,y:301.2},{x:95,y:304.2},{x:93,y:307.2},{x:91,y:310.2},{x:89.2,y:313.3},{x:87.4,y:316.4},{x:85.7,y:319.6},{x:84.2,y:322.9},{x:82.8,y:326.2},{x:81.5,y:329.5},{x:80.4,y:332.9},{x:79.4,y:336.4},{x:78.6,y:339.9},{x:77.9,y:343.5},{x:77.5,y:347},{x:77.1,y:350.6},{x:77,y:354.2},{x:77,y:357.8},{x:77.2,y:361.4},{x:77.6,y:365},{x:78.2,y:368.5},{x:79.1,y:372},{x:80.3,y:375.4},{x:81.7,y:378.7},{x:83.5,y:381.8},{x:85.6,y:384.8},{x:88,y:387.5},{x:90.6,y:389.9},{x:93.5,y:392.1},{x:96.6,y:393.9},{x:99.8,y:395.5},{x:103.1,y:396.8},{x:106.6,y:397.9},{x:110.1,y:398.7},{x:113.6,y:399.3},{x:117.2,y:399.7},{x:120.8,y:399.9},{x:124.4,y:400},{x:128,y:399.9},{x:131.6,y:399.6},{x:135.2,y:399.2},{x:138.7,y:398.7},{x:142.3,y:398.1},{x:145.8,y:397.4},{x:149.3,y:396.6},{x:152.8,y:395.6},{x:156.3,y:394.6},{x:159.7,y:393.5},{x:163.1,y:392.4},{x:166.5,y:391.1},{x:169.8,y:389.8},{x:173.1,y:388.4},{x:176.5,y:387},{x:179.8,y:385.7},{x:183.2,y:384.4},{x:186.6,y:383.2},{x:190,y:382.1},{x:193.4,y:381},{x:196.9,y:380},{x:200.4,y:379.1},{x:203.9,y:378.3},{x:207.4,y:377.6},{x:211,y:377},{x:214.5,y:376.6},{x:218.1,y:376.4},{x:221.7,y:376.3},{x:225.3,y:376.5},{x:228.9,y:377},{x:232.4,y:377.9},{x:235.8,y:379.1},{x:238.9,y:380.8},{x:241.8,y:382.9},{x:244.4,y:385.5},{x:246.5,y:388.4},{x:248.2,y:391.5},{x:249.5,y:394.9},{x:250.4,y:398.4},{x:251.1,y:401.9},{x:251.5,y:405.5},{x:251.6,y:409.1},{x:251.5,y:412.7},{x:251.2,y:416.3},{x:250.8,y:419.8},{x:250.1,y:423.4},{x:249.1,y:426.8},{x:246.5,y:428.3},{x:244.5,y:425.4},{x:243.1,y:422},{x:242.1,y:418.6},{x:79.8,y:73.8}];\r\n\r\nconst dog: IPoint[] = [{ x: 180, y: 280 }, { x: 181.06, y: 275.77 }, { x: 182.11, y: 271.55 }, { x: 183.17, y: 267.32 }, { x: 184.23, y: 263.1 }, { x: 185.28, y: 258.87 }, { x: 186.34, y: 254.65 }, { x: 187.39, y: 250.42 }, { x: 188.45, y: 246.2 }, { x: 191.09, y: 244 }, { x: 195.44, y: 243.99 }, { x: 199.8, y: 243.96 }, { x: 204.16, y: 243.91 }, { x: 208.51, y: 243.85 }, { x: 212.86, y: 243.76 }, { x: 217.22, y: 243.65 }, { x: 221.57, y: 243.52 }, { x: 225.92, y: 243.36 }, { x: 230.28, y: 243.19 }, { x: 234.63, y: 242.98 }, { x: 238.98, y: 242.76 }, { x: 243.32, y: 242.51 }, { x: 247.67, y: 242.23 }, { x: 252.02, y: 241.93 }, { x: 256.36, y: 241.61 }, { x: 260.7, y: 241.26 }, { x: 265.04, y: 240.9 }, { x: 269.38, y: 240.51 }, { x: 273.72, y: 240.12 }, { x: 278.05, y: 239.72 }, { x: 282.39, y: 239.32 }, { x: 286.73, y: 238.94 }, { x: 291.07, y: 238.6 }, { x: 295.42, y: 238.32 }, { x: 299.77, y: 238.13 }, { x: 304.12, y: 238.06 }, { x: 308.48, y: 238.17 }, { x: 312.82, y: 238.47 }, { x: 317.14, y: 238.98 }, { x: 321.43, y: 239.73 }, { x: 325.68, y: 240.7 }, { x: 329.88, y: 241.86 }, { x: 334.02, y: 243.19 }, { x: 338.12, y: 244.67 }, { x: 340.45, y: 247.95 }, { x: 341.46, y: 252.19 }, { x: 342.53, y: 256.41 }, { x: 343.67, y: 260.61 }, { x: 344.91, y: 264.79 }, { x: 346.27, y: 268.92 }, { x: 347.84, y: 272.99 }, { x: 349.84, y: 276.85 }, { x: 353.22, y: 278.14 }, { x: 354.78, y: 274.11 }, { x: 355.48, y: 269.81 }, { x: 355.88, y: 265.48 }, { x: 356.12, y: 261.13 }, { x: 356.26, y: 256.78 }, { x: 356.32, y: 252.42 }, { x: 356.33, y: 248.07 }, { x: 356.28, y: 243.71 }, { x: 356.2, y: 239.36 }, { x: 356.09, y: 235 }, { x: 355.95, y: 230.65 }, { x: 355.79, y: 226.3 }, { x: 355.6, y: 221.95 }, { x: 355.4, y: 217.6 }, { x: 355.18, y: 213.25 }, { x: 353.9, y: 210 }, { x: 356.38, y: 209.28 }, { x: 360.55, y: 208.02 }, { x: 364.58, y: 206.37 }, { x: 368.41, y: 204.31 }, { x: 371.94, y: 201.76 }, { x: 374.93, y: 198.61 }, { x: 376.22, y: 194.58 }, { x: 372.87, y: 193.87 }, { x: 368.8, y: 195.43 }, { x: 364.7, y: 196.9 }, { x: 360.57, y: 198.28 }, { x: 356.42, y: 199.58 }, { x: 352.24, y: 200.81 }, { x: 348.04, y: 201.96 }, { x: 343.82, y: 203.05 }, { x: 339.59, y: 204.08 }, { x: 335.34, y: 205.04 }, { x: 331.08, y: 205.95 }, { x: 326.81, y: 206.81 }, { x: 322.53, y: 207.62 }, { x: 318.24, y: 208.38 }, { x: 313.95, y: 209.09 }, { x: 309.64, y: 209.76 }, { x: 305.33, y: 210.38 }, { x: 301.02, y: 210.96 }, { x: 296.69, y: 211.5 }, { x: 292.37, y: 212 }, { x: 288.04, y: 212.47 }, { x: 283.7, y: 212.89 }, { x: 279.36, y: 213.27 }, { x: 275.02, y: 213.62 }, { x: 270.68, y: 213.93 }, { x: 266.33, y: 214.21 }, { x: 261.98, y: 214.44 }, { x: 257.63, y: 214.64 }, { x: 253.28, y: 214.81 }, { x: 248.93, y: 214.93 }, { x: 244.57, y: 215.02 }, { x: 240.22, y: 215.07 }, { x: 235.86, y: 215.07 }, { x: 231.51, y: 215.04 }, { x: 227.15, y: 214.97 }, { x: 222.8, y: 214.85 }, { x: 218.45, y: 214.68 }, { x: 214.1, y: 214.46 }, { x: 209.75, y: 214.2 }, { x: 205.41, y: 213.87 }, { x: 201.07, y: 213.48 }, { x: 196.74, y: 213.02 }, { x: 192.41, y: 212.49 }, { x: 188.1, y: 211.86 }, { x: 183.81, y: 211.13 }, { x: 179.54, y: 210.28 }, { x: 175.31, y: 209.26 }, { x: 171.13, y: 208.04 }, { x: 167.05, y: 206.51 }, { x: 163.1, y: 204.68 }, { x: 158.84, y: 203.86 }, { x: 154.54, y: 204.41 }, { x: 150.73, y: 206.47 }, { x: 147.73, y: 209.6 }, { x: 145.46, y: 213.32 }, { x: 143.78, y: 217.33 }, { x: 142.54, y: 221.51 }, { x: 141.65, y: 225.77 }, { x: 141.06, y: 230.08 }, { x: 140.73, y: 234.43 }, { x: 140.63, y: 238.78 }, { x: 140.76, y: 243.13 }, { x: 141.1, y: 247.47 }, { x: 141.68, y: 251.79 }, { x: 142.5, y: 256.07 }, { x: 143.61, y: 260.28 }, { x: 145.05, y: 264.39 }, { x: 146.91, y: 268.32 }, { x: 149.37, y: 271.91 }, { x: 152.62, y: 274.78 }, { x: 156.37, y: 273.25 }, { x: 158.69, y: 269.58 }, { x: 160.26, y: 265.52 }, { x: 161.43, y: 261.33 }, { x: 162.34, y: 257.07 }, { x: 163.05, y: 252.77 }, { x: 163.61, y: 248.46 }, { x: 164.03, y: 244.12 }, { x: 164.34, y: 239.78 }, { x: 164.54, y: 235.43 }, { x: 164.62, y: 231.07 }, { x: 164.6, y: 226.72 }, { x: 164.47, y: 222.36 }, { x: 164.21, y: 218.02 }, { x: 163.83, y: 213.68 }, { x: 163.28, y: 209.36 }, { x: 162.54, y: 205.07 }, { x: 161.54, y: 200.83 }, { x: 160.17, y: 196.69 }, { x: 158.2, y: 192.82 }, { x: 155.11, y: 189.82 }, { x: 150.89, y: 189.62 }, { x: 147.22, y: 191.59 }, { x: 144.01, y: 194.54 }, { x: 140.86, y: 197.54 }, { x: 137.78, y: 200.62 }, { x: 134.78, y: 203.78 }, { x: 131.82, y: 206.98 }, { x: 128.74, y: 210.05 }, { x: 125.45, y: 212.9 }, { x: 122.01, y: 215.57 }, { x: 118.48, y: 218.13 }, { x: 114.9, y: 220.61 }, { x: 111.29, y: 223.05 }, { x: 107.66, y: 225.46 }, { x: 104.02, y: 227.84 }, { x: 100.36, y: 230.21 }, { x: 96.7, y: 232.56 }, { x: 93.03, y: 234.91 }, { x: 89.35, y: 237.25 }, { x: 85.67, y: 239.57 }, { x: 88.37, y: 240.96 }, { x: 92.63, y: 241.83 }, { x: 96.98, y: 241.99 }, { x: 101.32, y: 241.68 }, { x: 105.63, y: 241.07 }, { x: 109.92, y: 240.29 }, { x: 114.19, y: 239.43 }, { x: 118.46, y: 238.58 }, { x: 122.74, y: 237.8 }, { x: 127.06, y: 237.2 }, { x: 131.4, y: 236.9 }, { x: 135.75, y: 237.09 }, { x: 140, y: 238 }, { x: 180, y: 280 }];\r\n\r\nconst triangle: IPoint[] = [{ x: 100, y: 100 }, { x: 400, y: 100 }, { x: 100, y: 400 }, { x: 100, y: 100 }];\r\n\r\nconst round: IPoint[] = [{ x: 350, y: 250 }, { x: 347.64, y: 260.96 }, { x: 340.67, y: 268.68 }, { x: 329.43, y: 273.26 }, { x: 314.42, y: 274.97 }, { x: 296.35, y: 274.23 }, { x: 276.04, y: 271.59 }, { x: 254.37, y: 267.68 }, { x: 232.29, y: 263.14 }, { x: 210.71, y: 258.61 }, { x: 190.45, y: 254.65 }, { x: 172.25, y: 251.74 }, { x: 156.67, y: 250.2 }, { x: 144.12, y: 250.2 }, { x: 134.77, y: 251.74 }, { x: 128.65, y: 254.65 }, { x: 125.55, y: 258.61 }, { x: 125.13, y: 263.14 }, { x: 126.89, y: 267.68 }, { x: 130.24, y: 271.59 }, { x: 134.55, y: 274.23 }, { x: 139.16, y: 274.97 }, { x: 143.47, y: 273.26 }, { x: 146.96, y: 268.68 }, { x: 149.22, y: 260.96 }, { x: 150, y: 250 }, { x: 149.22, y: 235.9 }, { x: 146.96, y: 218.95 }, { x: 143.47, y: 199.64 }, { x: 139.16, y: 178.62 }, { x: 134.55, y: 156.67 }, { x: 130.24, y: 134.68 }, { x: 126.89, y: 113.58 }, { x: 125.13, y: 94.28 }, { x: 125.55, y: 77.65 }, { x: 128.65, y: 64.44 }, { x: 134.77, y: 55.28 }, { x: 144.12, y: 50.59 }, { x: 156.67, y: 50.59 }, { x: 172.25, y: 55.28 }, { x: 190.45, y: 64.44 }, { x: 210.71, y: 77.65 }, { x: 232.29, y: 94.28 }, { x: 254.37, y: 113.58 }, { x: 276.04, y: 134.68 }, { x: 296.35, y: 156.67 }, { x: 314.42, y: 178.62 }, { x: 329.43, y: 199.64 }, { x: 340.67, y: 218.95 }, { x: 347.64, y: 235.9 }, { x: 350, y: 250 }];\r\n\r\nexport {\r\n    arlequin as Arlequin,\r\n    dog as Dog,\r\n    triangle as Triangle,\r\n    round as Round,\r\n};\r\n","declare const Button: any;\r\ndeclare const Canvas: any;\r\ndeclare const Checkbox: any;\r\ndeclare const Controls: any;\r\ndeclare const FileControl: any;\r\ndeclare const Picker: any;\r\ndeclare const Range: any;\r\ndeclare const Tabs: any;\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    DISPLAY_CIRCLES: \"circles-checkbox-id\",\r\n    DISPLAY_SEGMENTS: \"segments-checkbox-id\",\r\n    DISPLAY_CURVE: \"curve-checkbox-id\",\r\n    ORDER: \"order-range-id\",\r\n    SPEED: \"speed-range-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[];\r\n} = {\r\n    clear: [],\r\n};\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get displayCircles(): boolean {\r\n        return displayCircles;\r\n    }\r\n    public static set displayCircles(display: boolean) {\r\n        if (displayCircles !== display) {\r\n            displayCircles = display;\r\n            Checkbox.setChecked(controlId.DISPLAY_CIRCLES, display);\r\n        }\r\n    }\r\n\r\n    public static get displaySegments(): boolean {\r\n        return displaySegments;\r\n    }\r\n    public static set displaySegments(display: boolean) {\r\n        if (displaySegments !== display) {\r\n            displaySegments = display;\r\n            Checkbox.setChecked(controlId.DISPLAY_SEGMENTS, display);\r\n        }\r\n    }\r\n\r\n    public static get displayCurve(): boolean {\r\n        return displayCurve;\r\n    }\r\n    public static set displayCurve(display: boolean) {\r\n        if (displayCurve !== display) {\r\n            displayCurve = display;\r\n            Checkbox.setChecked(controlId.DISPLAY_CURVE, display);\r\n        }\r\n    }\r\n\r\n    public static get order(): number {\r\n        return order;\r\n    }\r\n    public static set order(o: number) {\r\n        order = o;\r\n        Range.setValue(controlId.ORDER, o);\r\n    }\r\n\r\n    public static get speed(): number {\r\n        return speed;\r\n    }\r\n    public static set speed(s: number) {\r\n        speed = s;\r\n        Range.setValue(controlId.SPEED, s);\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nlet displayCircles: boolean = Checkbox.isChecked(controlId.DISPLAY_CIRCLES);\r\nCheckbox.addObserver(controlId.DISPLAY_CIRCLES, (checked: boolean) => {\r\n    displayCircles = checked;\r\n});\r\n\r\nlet displaySegments: boolean = Checkbox.isChecked(controlId.DISPLAY_SEGMENTS);\r\nCheckbox.addObserver(controlId.DISPLAY_SEGMENTS, (checked: boolean) => {\r\n    displaySegments = checked;\r\n});\r\n\r\nlet displayCurve: boolean = Checkbox.isChecked(controlId.DISPLAY_CURVE);\r\nCheckbox.addObserver(controlId.DISPLAY_CURVE, (checked: boolean) => {\r\n    displayCurve = checked;\r\n});\r\n\r\nlet order: number = Range.getValue(controlId.ORDER);\r\nRange.addObserver(controlId.ORDER, (o: number) => {\r\n    order = o;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nlet speed: number = Range.getValue(controlId.SPEED);\r\nRange.addObserver(controlId.SPEED, (s: number) => {\r\n    speed = s;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nexport {\r\n    Parameters,\r\n};\r\n"],"sourceRoot":""}