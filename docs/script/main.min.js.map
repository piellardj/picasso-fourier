{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/main.ts","webpack:///./src/ts/line-drawing.ts","webpack:///./src/ts/fourier-series.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","getElementById","context","getContext","width","height","lineWidth","animationLength","drawing","fourier","computeFourierSeries","fourierPoints","startTimestamp","requestAnimationFrame","mainLoop","timestamp","clearRect","push","computePoint","strokeStyle","beginPath","moveTo","x","y","length","lineTo","stroke","closePath","draw","drawPathToPoint","drawCircles","main","this","points","C","angle","Math","PI","cos","sin","nbPoints","fullUntil","floor","finalPoint","order","coefficients","cx","cy","TWO_PI_N_T","magnitude","sqrt","phase","atan2","FourierSeries","index","floorIndex","LineDrawing","interpolate","p1","p2","TWO_PI","_coefficients","coefficient","arc","lastCoefficient"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import LineDrawing from \"./line-drawing\";\r\nimport Point from \"./point\";\r\nimport { FourierSeries } from \"./fourier-series\";\r\n\r\nfunction main() {\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n    canvas.width = 512;//canvas.clientWidth;\r\n    canvas.height = 512;//canvas.clientHeight;\r\n    context.lineWidth = 1;\r\n\r\n    const animationLength = 5000; // in milliseconds\r\n\r\n    const drawing = new LineDrawing();\r\n    const fourier: FourierSeries = drawing.computeFourierSeries(5);\r\n    let fourierPoints: Point[] = [];\r\n\r\n    let startTimestamp: DOMHighResTimeStamp = null;\r\n    function mainLoop(timestamp: DOMHighResTimeStamp) {\r\n        if (startTimestamp === null) {\r\n            startTimestamp = timestamp;\r\n        }\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        let t = (timestamp - startTimestamp) / animationLength;\r\n        if (t > 1) {\r\n            startTimestamp = timestamp;\r\n            t = 0;\r\n            fourierPoints = [];\r\n        }\r\n\r\n        fourierPoints.push(fourier.computePoint(t));\r\n\r\n        context.strokeStyle = \"white\";\r\n        context.beginPath();\r\n        context.moveTo(fourierPoints[0].x, fourierPoints[0].y);\r\n        for (let i = 0; i < fourierPoints.length; i++) {\r\n            context.lineTo(fourierPoints[i].x, fourierPoints[i].y);\r\n        }\r\n        context.stroke();\r\n        context.closePath();\r\n\r\n        context.strokeStyle = \"green\";\r\n        drawing.draw(context, t);\r\n\r\n        context.strokeStyle = \"red\";\r\n        fourier.drawPathToPoint(context, t);\r\n\r\n        context.strokeStyle = \"yellow\";\r\n        fourier.drawCircles(context, t);\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { FourierCoefficient, FourierSeries } from \"./fourier-series\";\r\nimport Point from \"./point\";\r\n\r\nclass LineDrawing {\r\n    private readonly points: Point[];\r\n    private readonly nbPoints: number;\r\n\r\n    public constructor() {\r\n        this.points = [];\r\n\r\n        const N = 50;\r\n        const R = 100;\r\n        const C = 200;\r\n        for (let i = 0; i < N; i++) {\r\n            const angle = 2 * Math.PI * i / N;\r\n            this.points.push({\r\n                x: C + R * Math.cos(angle) + 50 * Math.cos(2 * angle),\r\n                y: C + R * Math.sin(angle) + 50 * Math.cos(2 * angle),\r\n            });\r\n        }\r\n        this.points.push({\r\n            x: C + R + 50,\r\n            y: C + 0,\r\n        });\r\n\r\n        // this.points.push({ x: 100, y: 100 });\r\n        // this.points.push({ x: 400, y: 100 });\r\n        // this.points.push({ x: 100, y: 400 });\r\n        // this.points.push({ x: 100, y: 100 });\r\n\r\n        this.nbPoints = this.points.length - 1;\r\n    }\r\n\r\n    /* Assumes t is between 0 and 1 included. */\r\n    public draw(context: CanvasRenderingContext2D, t: number) {\r\n        context.beginPath();\r\n\r\n        context.moveTo(this.points[0].x, this.points[0].y);\r\n\r\n        const fullUntil = Math.floor(t * this.nbPoints);\r\n        for (let i = 0; i <= fullUntil; i++) {\r\n            context.lineTo(this.points[i].x, this.points[i].y);\r\n        }\r\n\r\n        const finalPoint = this.computePoint(t);\r\n        context.lineTo(finalPoint.x, finalPoint.y);\r\n\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n\r\n    public computeFourierSeries(order: number): FourierSeries {\r\n        const integrationPrecision = 1000;\r\n        const precision = 1 / integrationPrecision;\r\n\r\n        const coefficients: FourierCoefficient[] = [];\r\n        for (let i = 0; i < 2 * order + 1; i++) {\r\n            let n = Math.floor((i + 1) / 2);\r\n            if (i > 0 && i % 2 === 0) {\r\n                n *= -1;\r\n            }\r\n\r\n            let cx = 0, cy = 0;\r\n\r\n            for (let i = 0; i < integrationPrecision; i++) {\r\n                const t = (i + 0.5) * precision;\r\n                const TWO_PI_N_T = 2 * Math.PI * n * t;\r\n                const cos = Math.cos(TWO_PI_N_T);\r\n                const sin = Math.sin(TWO_PI_N_T);\r\n                const value = this.computePoint(t);\r\n\r\n                cx += precision * (value.x * cos + value.y * sin);\r\n                cy += precision * (value.y * cos - value.x * sin);\r\n            }\r\n\r\n            coefficients.push({\r\n                magnitude: Math.sqrt(cx * cx + cy * cy),\r\n                phase: Math.atan2(cy, cx),\r\n                n,\r\n            });\r\n        }\r\n\r\n        return new FourierSeries(coefficients);\r\n    }\r\n\r\n    /* Assumes t is between 0 and 1 included. */\r\n    private computePoint(t: number): Point {\r\n        const index = t * this.nbPoints;\r\n        const floorIndex = Math.floor(index);\r\n\r\n        return LineDrawing.interpolate(this.points[floorIndex], this.points[floorIndex + 1], index - floorIndex);\r\n    }\r\n\r\n    /* Assumes t is between 0 and 1 included. */\r\n    private static interpolate(p1: Point, p2: Point, t: number): Point {\r\n        return {\r\n            x: p1.x * (1 - t) + p2.x * t,\r\n            y: p1.y * (1 - t) + p2.y * t,\r\n        };\r\n    }\r\n}\r\n\r\nexport default LineDrawing;","import Point from \"./point\";\r\n\r\ntype FourierCoefficient = {\r\n    magnitude: number;\r\n    phase: number;\r\n    n: number;\r\n}\r\n\r\nconst TWO_PI = 2 * Math.PI;\r\n\r\nclass FourierSeries {\r\n    private readonly _coefficients: FourierCoefficient[];\r\n\r\n    public constructor(coefficients: FourierCoefficient[]) {\r\n        this._coefficients = coefficients;\r\n    }\r\n\r\n    /* Assumes t is between 0 and 1 included. */\r\n    public computePoint(t: number): Point {\r\n        let x = 0, y = 0;\r\n\r\n        for (const coefficient of this._coefficients) {\r\n            const TWO_PI_N_T = TWO_PI * coefficient.n * t;\r\n            x += coefficient.magnitude * Math.cos(TWO_PI_N_T + coefficient.phase);\r\n            y += coefficient.magnitude * Math.sin(TWO_PI_N_T + coefficient.phase);\r\n        }\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    public drawPathToPoint(context: CanvasRenderingContext2D, t: number): void {\r\n        let x = 0, y = 0;\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n\r\n        for (const coefficient of this._coefficients) {\r\n            const TWO_PI_N_T = TWO_PI * coefficient.n * t;\r\n            x += coefficient.magnitude * Math.cos(TWO_PI_N_T + coefficient.phase);\r\n            y += coefficient.magnitude * Math.sin(TWO_PI_N_T + coefficient.phase);\r\n\r\n            context.lineTo(x, y);\r\n        }\r\n\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n\r\n    public drawCircles(context: CanvasRenderingContext2D, t: number): void {\r\n        let x = 0, y = 0;\r\n        context.beginPath();\r\n\r\n        for (const coefficient of this._coefficients) {\r\n            context.arc(x, y, coefficient.magnitude, 0, TWO_PI);\r\n\r\n            const TWO_PI_N_T = TWO_PI * coefficient.n * t;\r\n            x += coefficient.magnitude * Math.cos(TWO_PI_N_T + coefficient.phase);\r\n            y += coefficient.magnitude * Math.sin(TWO_PI_N_T + coefficient.phase);\r\n        }\r\n\r\n        if (this._coefficients.length > 1) {\r\n            const lastCoefficient = this._coefficients[this._coefficients.length - 1];\r\n            context.arc(x, y, lastCoefficient.magnitude, 0, TWO_PI);\r\n        }\r\n\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n}\r\n\r\nexport {\r\n    FourierCoefficient,\r\n    FourierSeries,\r\n};\r\n"],"sourceRoot":""}